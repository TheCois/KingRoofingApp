@{
    ViewBag.Title = "Inventory";
    Layout = "~/Views/Shared/_LayoutPage2.cshtml";
}
@Html.AntiForgeryToken()
<div class="content_block">
    <br />
    <div class="gridBlock inventory_page">
        <div class="head">
            Inventory
            @if (Convert.ToBoolean(ViewBag.AllowEdit))
            {
                <a id="update-inventory-all" class="addLead_saveCancel" href="#">Update All</a>
            }
        </div>
        <div id="errorMessages" style="width: 95%; margin-left: 20px; margin-right: 10px; margin-top:10px;">
            <div class="alert alert-success alert-dismissable" style="display: none;">
                <i class="fa fa-check"></i>
                <button class="close" onclick="$('.alert-success').hide()" type="button">×</button>
                <div id="dvSuccess"></div>
            </div>
            <div class="alert alert-danger alert-dismissable" style="display: none;">
                <i class="fa fa-ban"></i>
                <button class="close" onclick="$('.alert-danger').hide()" type="button">×</button>
                <div id="dvError"></div>
            </div>
        </div>
        <div class="clear_fix"></div>
        <div id="_tab02">
            <div class="table-container">
                <table id="grid-item" class="display" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            @if (Convert.ToBoolean(ViewBag.AllowEdit))
                            {
                                <th></th>
                            }
                            <th>Code</th>
                            <th>Item Name</th>
                            <th>Item Description</th>
                            <th>Quantity</th>
                            @if (Convert.ToBoolean(ViewBag.AllowEdit))
                            {
                                <th></th>
                                <th></th>
                                <th></th>
                            }
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="madals" class="madals"></div>
<div id="addItem_popup" class="addItem_popup">

    <div class="gridBlockLarge_btnHolder_head">
        Items
    </div>
    <div class="headSpacer"></div>
    <div class="topBlockSM">
        <div class="ColumnA">
            <div class="row">Item Type:</div>
            <div class="row">Item Code:</div>
            <div class="row">Name:</div>
            <div class="row rowHeight">Description:</div>
            <div class="row">Category:</div>
            <div class="row">Manufacturer:</div>
            <div class="row">Unit of Measure:</div>
            <div class="row">Price:</div>
            <div class="row">Is an Inv. Item:</div>
        </div>
        <div id="itemForm" class="ColumnB" data-val="0">
            <div class="row">
                <select id="item-type" class="InputTextAddInv">
                    <option value="volvo">Please select</option>
                    <option value="saab">State1</option>
                    <option value="mercedes">State2</option>
                    <option value="audi">State3</option>
                </select>
            </div>
            <div class="row">
                <input id="Item_Code" type="text" class="InputTextAddInv" />
            </div>
            <div class="row">
                <input id="Name" type="text" class="InputText" style="width: calc(100% - 10px)" />
            </div>
            <div class="row rowHeight">
                <textarea id="myNotes" class="Notes" rows="5" cols="10" style="width: calc(100% - 19px); padding-right: 15px; height: 50px; outline: medium none; overflow: hidden;" tabindex="0"></textarea>
            </div>
            <div class="row">
                <select id="Category_pop" class="InputTextAddInv">
                    <option value="volvo">Please select</option>
                    <option value="saab">State1</option>
                    <option value="mercedes">State2</option>
                    <option value="audi">State3</option>
                </select>
            </div>
            <div class="row">
                <select id="Manufacturer_pop" class="InputTextAddInv">
                    <option value="volvo">Please select</option>
                    <option value="saab">State1</option>
                    <option value="mercedes">State2</option>
                    <option value="audi">State3</option>
                </select>
            </div>
            <div class="row">
                <select id="Measure_pop" class="InputTextAddInv">
                    <option value="volvo">Please select</option>
                    <option value="saab">State1</option>
                    <option value="mercedes">State2</option>
                    <option value="audi">State3</option>
                </select>
            </div>
            <div class="row">
                <input id="Price" type="text" class="InputTextAddInv qty" />
            </div>
            <div class="row">
                <input id="chkIsInventoryItem" type="checkbox" style="float: left; margin-left: 0 !important;" />
            </div>
        </div>
    </div>

    <div class="clear_fix"></div>
    <div class="headSpacer"></div>
    <div class="gridBlockLarge_btnHolder" style="display: none;">
        <div class="gridBlockLarge_btnHolder_head">Mark-up(s) <a class="" href="#">Add</a> </div>
        <div class="addMarkup_block" style="width: 223px">Division:</div>
        <div class="addMarkup_block" style="width: 157px">
            <!-- dropdown component -->
            <div id="Division" class="abcDropDown" tabindex="2">
                <span>Select Division...</span>
                <ul class="dropdown">
                    <li><a href="#">Division 1</a></li>
                    <li><a href="#">Division 2</a></li>
                    <li><a href="#">Division 3</a></li>
                </ul>
            </div>
            <!-- dropdown component end -->

        </div>
        <div class="addMarkup_block">Percentage:</div>
        <div class="addMarkup_block">
            <input class="InputText" type="text">
        </div>
        <div class="addMarkup_block"><a id="A1" href="#" class="delete_classn inventoryColumn_linkBtn"></a></div>
        <div class="clear_fix"></div>
    </div>

    <div class="gridBlockLarge_btnHolderSaveCancel">
        <a id="addItemSave" class="addLead_saveCancel" href="#">Save & Close</a>
        <a id="update-item" class="addLead_saveCancel" href="#">Update</a>
        <a id="Cancel_Pop" class="addLead_saveCancel" href="#">Cancel</a>
    </div>
    <div id="errorMessagesItem" style="width: 95%; margin-left: 20px; margin-right: 10px;">
        <div id="successItem" class="alert alert-success alert-dismissable" style="display:none;">
            <i class="fa fa-check"></i>
            <button class="close" onclick="$('#successItem').hide()" type="button">×</button>
            <div id="dvSuccessItem"></div>
        </div>
        <div id="dangerItem" class="alert alert-danger alert-dismissable" style="display: none;">
            <i class="fa fa-ban"></i>
            <button class="close" onclick="$('#dangerItem').hide()" type="button">×</button>
            <div id="dvErrorItem"></div>
        </div>
    </div>

</div>
<div id="inventoryHistory_popup" class="inventoryHistory_popup">
    <div class="gridBlockLarge_btnHolder_head">
        Inventory History
    </div>
    <div class="headSpacer"></div>
    <div class="table-container">
        <table id="grid-item-history" class="display" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>Quantity</th>
                    <th>Type</th>
                    <th>Comment</th>
                    <th>Date Updated</th>
                </tr>
            </thead>
        </table>
    </div>
    <div class="clear_fix"></div>
    <div class="headSpacer"></div>
    <div class="gridBlockLarge_btnHolderSaveCancel">
        <a id="Cancel_History" class="addLead_saveCancel" href="#">Close</a>
    </div>
</div>

@section scripts {
    <script type="text/javascript">

        function LoadInventoryGrid()
        {
            Product = new Object();
            $('#grid-item').dataTable({
                "order": [[0, "asc"]],
                columnDefs: [
                    { className: "dt-left", targets: [0, 1, 2, 3, 5, 6, 7] },
                    { className: "dt-right", targets: [4] }
                ],
                "iDisplayLength": 100,
                "sAjaxSource": '@Url.Action("GetInventory", "Inventory")',
                //"aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "All"]],
                "fnServerData": function (sSource, aoData, fnCallback) {
                    aoData.push({ "name": "ID", "value": 5 });
                    $.getJSON(sSource, aoData, function (json) {
                        fnCallback(json);
                        Product = json.keyValue;
                    });
                }
            });
        }

        $(document).ready(function () {

            $("#inventory-link").addClass("linkBtn linkBtnAdd_Selected");

            LoadInventoryGrid();

            $("#update-inventory-all").on("click", function () {
                BootstrapDialog.confirm('Are you sure you want to update inventory?', function (result) {
                    if (result) {
                        var inventoryData = {};
                        var inventories = [];
                        $("#grid-item tr").each(function (index) {
                            if ($(this).hasClass("odd") || $(this).hasClass("even")) {
                                var qty = parseFloat($(this).find(".qty").val());
                                var inventoryID = $(this).find(".update-inventory").attr("data-val");
                                if (qty != undefined) {
                                    var inventory = { ID: inventoryID, Qty: qty };
                                    inventories.push(inventory);
                                }
                            }
                        });
                        inventoryData.Inventories = inventories;
                        SaveInventory(inventoryData);
                    } else {
                        //alert('Nope.');
                    }
                });

            });

            $(document).on("click", "#grid-item .update", function () {
                var tr = $(this).parent().parent().parent().parent();
                var qty = parseFloat($(tr).find(".qty").val());
                var inventoryID = $(tr).find(".update-inventory").attr("data-val");
                var token = $('[name=__RequestVerificationToken]').val();
                BootstrapDialog.confirm('Are you sure you want to update inventory?', function (result) {
                    if (result) {
                        var inventoryData = {};
                        var inventory = { ID: inventoryID, Qty: qty };
                        var inventories = [];
                        inventories.push(inventory);
                        inventoryData.Inventories = inventories;
                        SaveInventory(inventoryData);
                    } else {
                        //alert('Nope.');
                    }
                });

            });

            $(document).on("click", "#grid-item .delete", function () {
                var tr = $(this).parent().parent().parent().parent();
                var qty = parseFloat($(tr).find(".qty").val());
                var inventoryID = $(tr).find(".delete-inventory").attr("data-val");
                var token = $('[name=__RequestVerificationToken]').val();
                BootstrapDialog.confirm('Are you sure you want to delete this inventory item?', function (result) {
                    if (result) {
                        var inventoryData = {};
                        var inventory = { ID: inventoryID };
                        var inventories = [];
                        inventories.push(inventory);
                        inventoryData.Inventories = inventories;
                        DeleteInventory(inventoryData);
                        $('#grid-item').dataTable().fnDestroy();
                        LoadInventoryGrid();
                    } else {
                        //alert('Nope.');
                    }
                });

            });


            $(document).on("click", "#addItemSave", function () {
                var token = $('[name=__RequestVerificationToken]').val();

                var item = new Object();
                item.Id = $("#itemForm").attr("data-val");
                item.ItemTypeId = parseInt($("#item-type option:selected").val());
                item.ItemCode = $("#Item_Code").val();
                item.Name = $("#Name").val();
                item.Description = $("#myNotes").val();
                item.Division = $("#Division").find('ul li .selected').attr("data-id");
                item.CategoryId = parseInt($("#Category_pop option:selected").val());
                item.ManufacturerId = parseInt($("#Manufacturer_pop option:selected").val());
                item.UnitOfMeasureId = parseInt($("#Measure_pop option:selected").val());
                item.Price = $("#Price").val();
                item.IsInventoryItem = $('#chkIsInventoryItem').prop('checked') == true;

                if (item.ItemTypeId == 0) {
                    $('#dangerItem').show();
                    $('#dangerItem').find('#dvErrorItem').html('Please select item type.');
                    return false;
                }
                if (item.ItemCode == "") {
                    $('#dangerItem').show();
                    $('#dangerItem').find('#dvErrorItem').html('Please enter item code.');
                    return false;
                }
                if (item.Name == "") {
                    $('#dangerItem').show();
                    $('#dangerItem').find('#dvErrorItem').html('Please enter item name.');
                    return false;
                }



                //var Category = $("#Category_pop").find('ul li .selected').text();
                //var Manufacturer = $("#Manufacturer_pop").find('ul li .selected').text();
                //var UnitOfMeasure = $("#Measure_pop").find('ul li .selected').text();

                var isNew = "n";
                if (item.id == "0" || item.id == "")
                    isNew = "y"
                openModal();
                $.ajax({
                    url: getWebsiteBaseUrl() + 'Product/SaveItem',
                    type: 'POST',
                    datatype: "json",
                    data: { "item": JSON.stringify(item), "__RequestVerificationToken": token }
                }).done(function (data) {
                    closeModal();
                    $("#Cancel_Pop").click();
                    $('#grid-item').dataTable().fnDestroy();
                    LoadInventoryGrid();
                });
            });

            $(document).on("click", "#update-item", function () {
                var token = $('[name=__RequestVerificationToken]').val();

                $('.alert-success').hide();
                $('.alert-success').find('#dvSuccessItem').text('');

                var item = new Object();
                item.Id = $("#itemForm").attr("data-val");
                item.ItemTypeId = parseInt($("#item-type option:selected").val());
                item.ItemCode = $("#Item_Code").val();
                item.Name = $("#Name").val();
                item.Description = $("#myNotes").val()
                item.Division = $("#Division").find('ul li .selected').attr("data-id");
                item.CategoryId = parseInt($("#Category_pop option:selected").val());
                item.ManufacturerId = parseInt($("#Manufacturer_pop option:selected").val());
                item.UnitOfMeasureId = parseInt($("#Measure_pop option:selected").val());
                item.Price = $("#Price").val();
                item.IsInventoryItem = $('#chkIsInventoryItem').prop('checked') == true;

                if (item.ItemTypeId == 0) {
                    $('#dangerItem').show();
                    $('#dangerItem').find('#dvErrorItem').html('Please select item type.');
                    return false;
                }
                if (item.ItemCode == "") {
                    $('#dangerItem').show();
                    $('#dangerItem').find('#dvErrorItem').html('Please enter item code.');
                    return false;
                }
                if (item.Name == "") {
                    $('#dangerItem').show();
                    $('#dangerItem').find('#dvErrorItem').html('Please enter item name.');
                    return false;
                }

                var isNew = "n";
                if (item.id == "0" || item.id == "")
                    isNew = "y"
                openModal();
                $.ajax({
                    url: getWebsiteBaseUrl() + 'Product/SaveItem',
                    type: 'POST',
                    datatype: "json",
                    data: { "item": JSON.stringify(item), "__RequestVerificationToken": token }
                }).done(function (data) {
                    closeModal();
                    $('#errorMessagesItem .alert-success').show();
                    $('#errorMessagesItem .alert-success').find('#dvSuccessItem').text(data.message);
                });
            });
        });

        $(document).on("click", "#grid-item .history", function () {
            var tr = $(this).parent().parent().parent().parent();
            var inventoryID = $(tr).find(".update-inventory").attr("data-val");
            var token = $('[name=__RequestVerificationToken]').val();
            openModal();
            $.ajax({
                url: '@Url.Action("GetInventoryHistory", "Inventory")',
                type: 'POST',
                datatype: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ID : inventoryID})
            }).success(function (data) {
                $('#grid-item-history').dataTable().fnDestroy();

                $('#grid-item-history').dataTable({
                    "order": [[3, "desc"]],
                    "bPaginate": true,
                    "iDisplayLength": 10,
                    "bLengthChange": false,
                    "bFilter": true,
                    "bInfo": false,
                    "bSort": true,
                    "bAutoWidth": false,
                    "aaData": data.aaData
                });
                closeModal();
            });

            $("#inventoryHistory_popup").show();

            $("#madals").css({ "height": $(document).height(), "width": $(document).width() });
            $("#madals").show();
        });

        function SaveInventory(inventoryData) {
            openModal();
            $.ajax({
                url: '@Url.Action("UpdateInventory", "Inventory")',
                type: 'POST',
                datatype: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(inventoryData)
            }).success(function (data) {
                if (data.success) {
                    $('.alert-danger').hide();
                    $('.alert-success').show();
                    $('.alert-success').find('#dvSuccess').text(data.message);
                }
                else {
                    $('.alert-success').hide();
                    $('.alert-danger').show();
                    $('.alert-danger').find('#dvError').text(data.message);
                }
                closeModal();
            });
        }
        function DeleteInventory(inventoryData) {
            openModal();
            $.ajax({
                url: '@Url.Action("DeleteInventory", "Inventory")',
                type: 'POST',
                datatype: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(inventoryData)
            }).success(function (data) {
                if (data.success) {
                    $('.alert-danger').hide();
                    $('.alert-success').show();
                    $('.alert-success').find('#dvSuccess').text(data.message);
                }
                else {
                    $('.alert-success').hide();
                    $('.alert-danger').show();
                    $('.alert-danger').find('#dvError').text(data.message);
                }
                closeModal();
            });
        }
        $("#Cancel_History").click(function () {
            $("#madals").hide();
            $("#inventoryHistory_popup").hide();
        });
        $("#Cancel_Pop").click(function () {
            $('#errorMessagesItem .alert').hide();
            $('#errorMessagesItem .alert').find('#dvSuccessItem').text('');
            $("#madals").hide();
            $("#addItem_popup").hide();
        });
        $(document).keyup(function (e) {
            if (e.keyCode === 27) {   // esc
                $("#Cancel_Pop").click();
            }
        });
    </script>
}